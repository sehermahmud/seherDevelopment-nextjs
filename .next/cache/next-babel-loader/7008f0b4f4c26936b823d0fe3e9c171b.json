{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport Theme from \"../src/ui/Theme\";\nimport Header from \"../src/ui/Header\";\nimport Footer from \"../src/ui/Footer\";\nexport default class MyApp extends App {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setValue\", index => {\n      this.setState({\n        value: index\n      });\n    });\n\n    _defineProperty(this, \"setSelectedIndex\", index => {\n      this.setState({\n        selectedIndex: index\n      });\n    });\n\n    this.state = {\n      value: 0,\n      selectedIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Seher Development\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n    })), __jsx(ThemeProvider, {\n      theme: Theme\n    }, __jsx(Header, {\n      value: this.state.value,\n      setValue: this.setValue,\n      selectedIndex: this.state.selectedIndex,\n      setSelectedIndex: this.setSelectedIndex\n    }), __jsx(Component, _extends({}, pageProps, {\n      setSelectedIndex: this.setSelectedIndex,\n      setValue: this.setValue\n    })), __jsx(Footer, {\n      setSelectedIndex: this.setSelectedIndex,\n      setValue: this.setValue\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}