{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Link from \"../Link\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonArrow from \"./ButtonArrow\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    learnButton: _objectSpread(_objectSpread({}, theme.typography.learnButton), {}, _defineProperty({\n      fontSize: \"0.7rem\",\n      height: 35,\n      padding: 5\n    }, theme.breakpoints.down(\"sm\"), {\n      marginBottom: \"2em\"\n    })),\n    background: _defineProperty({\n      backgroundImage: \"url(\\\"/assets/background.jpg\\\")\",\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundAttachment: \"fixed\",\n      backgroundRepeat: \"no-repeat\",\n      height: \"60em\",\n      width: \"100%\"\n    }, theme.breakpoints.down(\"md\"), {\n      backgroundImage: \"url(\\\"/assets/mobileBackground.jpg\\\")\",\n      backgroundAttachment: \"inherit\"\n    }),\n    estimateButton: _objectSpread(_objectSpread({}, theme.typography.estimate), {}, _defineProperty({\n      borderRadius: 50,\n      height: 80,\n      width: 205,\n      backgroundColor: theme.palette.common.blue,\n      fontSize: \"1.5rem\",\n      marginRight: \"5em\",\n      marginLeft: \"2em\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light\n      }\n    }, theme.breakpoints.down(\"sm\"), {\n      marginLeft: 0,\n      marginRight: 0\n    }))\n  };\n});\nexport default function CallToAction(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n  var matchesSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justify: matchesSM ? \"center\" : \"space-between\",\n    className: classes.background,\n    direction: matchesSM ? \"column\" : \"row\"\n  }, __jsx(Grid, {\n    item: true,\n    style: {\n      marginLeft: matchesSM ? 0 : \"5em\",\n      textAlign: matchesSM ? \"center\" : \"inherit\"\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Typography, {\n    variant: \"h2\"\n  }, \"Simple Software.\", __jsx(\"br\", null), \"Revolutionary Results.\"), __jsx(Typography, {\n    variant: \"subtitle2\",\n    style: {\n      fontSize: \"1.5rem\"\n    }\n  }, \"Take advantage of the 21st Century.\"), __jsx(Grid, {\n    container: true,\n    justify: matchesSM ? \"center\" : undefined,\n    item: true\n  }, __jsx(Button, {\n    component: Link,\n    href: \"/revolution\",\n    variant: \"outlined\",\n    className: classes.learnButton,\n    onClick: function onClick() {\n      return props.setValue(2);\n    }\n  }, __jsx(\"span\", {\n    style: {\n      marginRight: 5\n    }\n  }, \"Learn More\"), __jsx(ButtonArrow, {\n    width: 10,\n    height: 10,\n    fill: theme.palette.common.blue\n  })))))), __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    component: Link,\n    href: \"/estimate\",\n    variant: \"contained\",\n    className: classes.estimateButton,\n    onClick: function onClick() {\n      return props.setValue(5);\n    }\n  }, \"Free Estimate\")));\n}","map":null,"metadata":{},"sourceType":"module"}