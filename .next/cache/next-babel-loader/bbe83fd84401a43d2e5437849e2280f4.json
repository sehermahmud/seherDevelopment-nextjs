{"ast":null,"code":"var _jsxFileName = \"/Users/sehermahmud/npm-global/udemy/d-Material-UI-React/seherDevelopment-nextjs/src/ui/Header.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React, { useState, useEffect } from \"react\";\n// import Lottie from \"react-lottie\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n// import { makeStyles } from \"@material-ui/styles\";\n// import Tabs from \"@material-ui/core/Tabs\";\n// import Tab from \"@material-ui/core/Tab\";\n// import Button from \"@material-ui/core/Button\";\n// import Link from \"../Link\";\n// import Menu from \"@material-ui/core/Menu\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import useMediaQuery from \"@material-ui/core/useMediaQuery\";\n// import { useTheme } from \"@material-ui/core/styles\";\n// import SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import List from \"@material-ui/core/List\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import Hidden from \"@material-ui/core/Hidden\";\n// import heartanimation from \"../animations/heartanimation/heart.json\";\n// function ElevationScroll(props) {\n//   const { children } = props;\n//   const trigger = useScrollTrigger({\n//     disableHysteresis: true,\n//     threshold: 0,\n//   });\n//   return React.cloneElement(children, {\n//     elevation: trigger ? 4 : 0,\n//   });\n// }\n// const useStyles = makeStyles((theme) => ({\n//   toolbarMargin: {\n//     ...theme.mixins.toolbar,\n//     marginBottom: \"3em\",\n//     [theme.breakpoints.down(\"md\")]: {\n//       marginBottom: \"2em\",\n//     },\n//     [theme.breakpoints.down(\"xs\")]: {\n//       marginBottom: \"1.25em\",\n//     },\n//   },\n//   logo: {\n//     height: \"8em\",\n//     width: \"8rem\",\n//     [theme.breakpoints.down(\"md\")]: {\n//       height: \"7em\",\n//       width: \"7rem\",\n//     },\n//     [theme.breakpoints.down(\"xs\")]: {\n//       height: \"5.5em\",\n//       width: \"5.5rem\",\n//     },\n//   },\n//   logoContainer: {\n//     padding: 0,\n//     \"&:hover\": {\n//       backgroundColor: \"transparent\",\n//     },\n//   },\n//   tabContainer: {\n//     marginLeft: \"auto\",\n//   },\n//   tab: {\n//     ...theme.typography.tab,\n//     minWidth: 10,\n//     marginLeft: \"25px\",\n//   },\n//   button: {\n//     ...theme.typography.estimate,\n//     borderRadius: \"50px\",\n//     marginLeft: \"50px\",\n//     marginRight: \"25px\",\n//     height: \"45px\",\n//     \"&:hover\": {\n//       backgroundColor: theme.palette.primary.light,\n//     },\n//   },\n//   menu: {\n//     backgroundColor: theme.palette.common.redPink,\n//     color: \"white\",\n//     borderRadius: \"0px\",\n//   },\n//   menuItem: {\n//     ...theme.typography.tab,\n//     color: \"white\",\n//     opacity: 0.7,\n//     \"&:hover\": {\n//       opacity: 1,\n//     },\n//   },\n//   drawerIcon: {\n//     height: \"50px\",\n//     width: \"50px\",\n//   },\n//   drawerIconContainer: {\n//     marginLeft: \"auto\",\n//     \"&:hover\": {\n//       backgroundColor: \"transparent\",\n//     },\n//   },\n//   drawer: {\n//     backgroundColor: theme.palette.common.redPink,\n//   },\n//   drawerItem: {\n//     ...theme.typography.tab,\n//     color: \"white\",\n//     opacity: 0.7,\n//   },\n//   drawerItemEstimate: {\n//     backgroundColor: theme.palette.common.blue,\n//   },\n//   drawerItemSelected: {\n//     \"& .MuiListItemText-root\": {\n//       opacity: 1,\n//     },\n//   },\n//   appbar: {\n//     zIndex: theme.zIndex.modal + 1,\n//   },\n// }));\n// export default function Header(props) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n//   const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n//   const [openDrawer, setOpenDrawer] = useState(false);\n//   const [anchorEl, setAnchorEl] = useState(null);\n//   const [openMenu, setOpenMenu] = useState(false);\n//   const defaultOptions = {\n//     loop: true,\n//     autoplay: true,\n//     animationData: heartanimation,\n//     rendererSettings: {\n//       preserveAspectRatio: \"xMidYMid slice\",\n//     },\n//   };\n//   const handleChange = (e, newValue) => {\n//     props.setValue(newValue);\n//   };\n//   const handleClick = (e) => {\n//     setAnchorEl(e.currentTarget);\n//     setOpenMenu(true);\n//   };\n//   const handleMenuItemClick = (e, i) => {\n//     setAnchorEl(null);\n//     setOpenMenu(false);\n//     props.setSelectedIndex(i);\n//   };\n//   const handleClose = (e) => {\n//     setAnchorEl(null);\n//     setOpenMenu(false);\n//   };\n//   const menuOptions = [\n//     { name: \"Services\", link: \"/services\", activeIndex: 1, selectedIndex: 0 },\n//     {\n//       name: \"Custom Software Development\",\n//       link: \"/customsoftware\",\n//       activeIndex: 1,\n//       selectedIndex: 1,\n//     },\n//     {\n//       name: \"iOS/Android App Development\",\n//       link: \"/mobileapps\",\n//       activeIndex: 1,\n//       selectedIndex: 2,\n//     },\n//     {\n//       name: \"Website Development\",\n//       link: \"/websites\",\n//       activeIndex: 1,\n//       selectedIndex: 3,\n//     },\n//   ];\n//   const routes = [\n//     { name: \"Home\", link: \"/\", activeIndex: 0 },\n//     {\n//       name: \"Services\",\n//       link: \"/services\",\n//       activeIndex: 1,\n//       ariaOwns: anchorEl ? \"simple-menu\" : undefined,\n//       ariaPopup: anchorEl ? \"true\" : undefined,\n//       mouseOver: (event) => handleClick(event),\n//     },\n//     { name: \"The Revolution\", link: \"/revolution\", activeIndex: 2 },\n//     { name: \"About Us\", link: \"/about\", activeIndex: 3 },\n//     { name: \"Contact Us\", link: \"/contact\", activeIndex: 4 },\n//   ];\n//   useEffect(() => {\n//     [...menuOptions, ...routes].forEach((route) => {\n//       switch (window.location.pathname) {\n//         case `${route.link}`:\n//           if (props.value !== route.activeIndex) {\n//             props.setValue(route.activeIndex);\n//             if (\n//               route.selectedIndex &&\n//               route.selectedIndex !== props.selectedIndex\n//             ) {\n//               props.setSelectedIndex(route.selectedIndex);\n//             }\n//           }\n//           break;\n//         case \"/estimate\":\n//           if (props.value !== 5) {\n//             props.setValue(5);\n//           }\n//           break;\n//         default:\n//           break;\n//       }\n//     });\n//   }, [props.value, menuOptions, props.selectedIndex, routes, props]);\n//   const tabs = (\n//     <React.Fragment>\n//       <Tabs\n//         value={props.value}\n//         onChange={handleChange}\n//         className={classes.tabContainer}\n//         indicatorColor=\"primary\"\n//       >\n//         {routes.map((route, index) => (\n//           <Tab\n//             key={`${route}${index}`}\n//             className={classes.tab}\n//             component={Link}\n//             href={route.link}\n//             label={route.name}\n//             aria-owns={route.ariaOwns}\n//             aria-haspopup={route.ariaPopup}\n//             onMouseOver={route.mouseOver}\n//             style={{ color: \"white\" }}\n//           />\n//         ))}\n//       </Tabs>\n//       <Button\n//         component={Link}\n//         href=\"/estimate\"\n//         variant=\"contained\"\n//         color=\"primary\"\n//         className={classes.button}\n//         onClick={() => props.setValue(5)}\n//       >\n//         Free Estimate\n//       </Button>\n//       <Menu\n//         id=\"simple-menu\"\n//         anchorEl={anchorEl}\n//         open={openMenu}\n//         onClose={handleClose}\n//         classes={{ paper: classes.menu }}\n//         MenuListProps={{\n//           onMouseLeave: handleClose,\n//         }}\n//         elevation={0}\n//         style={{ zIndex: 1302 }}\n//         keepMounted\n//       >\n//         {menuOptions.map((option, i) => (\n//           <MenuItem\n//             key={`${option}${i}`}\n//             component={Link}\n//             href={option.link}\n//             classes={{ root: classes.menuItem }}\n//             onClick={(event) => {\n//               handleMenuItemClick(event, i);\n//               props.setValue(1);\n//               handleClose();\n//             }}\n//             selected={i === props.selectedIndex && props.value === 1}\n//           >\n//             {option.name}\n//           </MenuItem>\n//         ))}\n//       </Menu>\n//     </React.Fragment>\n//   );\n//   const drawer = (\n//     <React.Fragment>\n//       <SwipeableDrawer\n//         disableBackdropTransition={!iOS}\n//         disableDiscovery={iOS}\n//         open={openDrawer}\n//         onClose={() => setOpenDrawer(false)}\n//         onOpen={() => setOpenDrawer(true)}\n//         classes={{ paper: classes.drawer }}\n//       >\n//         <div className={classes.toolbarMargin} />\n//         <List disablePadding>\n//           {routes.map((route) => (\n//             <ListItem\n//               divider\n//               key={`${route}${route.activeIndex}`}\n//               button\n//               component={Link}\n//               href={route.link}\n//               selected={props.value === route.activeIndex}\n//               classes={{ selected: classes.drawerItemSelected }}\n//               onClick={() => {\n//                 setOpenDrawer(false);\n//                 props.setValue(route.activeIndex);\n//               }}\n//             >\n//               <ListItemText className={classes.drawerItem} disableTypography>\n//                 {route.name}\n//               </ListItemText>\n//             </ListItem>\n//           ))}\n//           <ListItem\n//             onClick={() => {\n//               setOpenDrawer(false);\n//               props.setValue(5);\n//             }}\n//             divider\n//             button\n//             component={Link}\n//             classes={{\n//               root: classes.drawerItemEstimate,\n//               selected: classes.drawerItemSelected,\n//             }}\n//             href=\"/estimate\"\n//             selected={props.value === 5}\n//           >\n//             <ListItemText className={classes.drawerItem} disableTypography>\n//               Free Estimate\n//             </ListItemText>\n//           </ListItem>\n//         </List>\n//       </SwipeableDrawer>\n//       <IconButton\n//         className={classes.drawerIconContainer}\n//         onClick={() => setOpenDrawer(!openDrawer)}\n//         disableRipple\n//       >\n//         <MenuIcon className={classes.drawerIcon} />\n//       </IconButton>\n//     </React.Fragment>\n//   );\n//   return (\n//     <React.Fragment>\n//       <ElevationScroll>\n//         <AppBar position=\"fixed\" color=\"secondary\" className={classes.appbar}>\n//           <Toolbar disableGutters>\n//             <Lottie\n//               options={defaultOptions}\n//               height=\"5em\"\n//               width=\"6em\"\n//               style={{ margin: 0 }}\n//             />\n//             <Button\n//               component={Link}\n//               href=\"/\"\n//               disableRipple\n//               onClick={() => props.setValue(0)}\n//               className={classes.logoContainer}\n//             >\n//               <img\n//                 alt=\"Company logo\"\n//                 className={classes.logo}\n//                 src=\"/assets/seherlogo.png\"\n//               />\n//             </Button>\n//             <Hidden mdDown>{tabs}</Hidden>\n//             <Hidden lgUp>{drawer}</Hidden>\n//           </Toolbar>\n//         </AppBar>\n//       </ElevationScroll>\n//       <div className={classes.toolbarMargin} />\n//     </React.Fragment>\n//   );\n// }\nimport React, { useState, useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\"; // import logo from \"../../assets/seherlogo.png\";\n\nfunction ElevationScroll(props) {\n  const {\n    children\n  } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: _objectSpread(_objectSpread({}, theme.mixins.toolbar), {}, {\n    marginBottom: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: \"2em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"1.25em\"\n    }\n  }),\n  logo: {\n    height: \"8em\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"7em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"5.5em\"\n    }\n  },\n  logoContainer: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  tabContainer: {\n    marginLeft: \"auto\"\n  },\n  tab: _objectSpread(_objectSpread({}, theme.typography.tab), {}, {\n    minWidth: 10,\n    marginLeft: \"25px\"\n  }),\n  button: _objectSpread(_objectSpread({}, theme.typography.estimate), {}, {\n    borderRadius: \"50px\",\n    marginLeft: \"50px\",\n    marginRight: \"25px\",\n    height: \"45px\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light\n    }\n  }),\n  menu: {\n    backgroundColor: theme.palette.common.blue,\n    color: \"white\",\n    borderRadius: \"0px\"\n  },\n  menuItem: _objectSpread(_objectSpread({}, theme.typography.tab), {}, {\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1\n    }\n  }),\n  drawerIcon: {\n    height: \"50px\",\n    width: \"50px\"\n  },\n  drawerIconContainer: {\n    marginLeft: \"auto\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  drawer: {\n    backgroundColor: theme.palette.common.blue\n  },\n  drawerItem: _objectSpread(_objectSpread({}, theme.typography.tab), {}, {\n    color: \"white\",\n    opacity: 0.7\n  }),\n  drawerItemEstimate: {\n    backgroundColor: theme.palette.common.orange\n  },\n  drawerItemSelected: {\n    \"& .MuiListItemText-root\": {\n      opacity: 1\n    }\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1\n  }\n}));\nexport default function Header(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const iOS = false && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const {\n    0: openDrawer,\n    1: setOpenDrawer\n  } = useState(false);\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: openMenu,\n    1: setOpenMenu\n  } = useState(false);\n\n  const handleChange = (e, newValue) => {\n    props.setValue(newValue);\n  };\n\n  const handleClick = e => {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  };\n\n  const handleMenuItemClick = (e, i) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n    props.setSelectedIndex(i);\n  };\n\n  const handleClose = e => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const menuOptions = [{\n    name: \"Services\",\n    link: \"/services\",\n    activeIndex: 1,\n    selectedIndex: 0\n  }, {\n    name: \"Custom Software Development\",\n    link: \"/customsoftware\",\n    activeIndex: 1,\n    selectedIndex: 1\n  }, {\n    name: \"iOS/Android App Development\",\n    link: \"/mobileapps\",\n    activeIndex: 1,\n    selectedIndex: 2\n  }, {\n    name: \"Website Development\",\n    link: \"/websites\",\n    activeIndex: 1,\n    selectedIndex: 3\n  }];\n  const routes = [{\n    name: \"Home\",\n    link: \"/\",\n    activeIndex: 0\n  }, {\n    name: \"Services\",\n    link: \"/services\",\n    activeIndex: 1,\n    ariaOwns: anchorEl ? \"simple-menu\" : undefined,\n    ariaPopup: anchorEl ? \"true\" : undefined,\n    mouseOver: event => handleClick(event)\n  }, {\n    name: \"The Revolution\",\n    link: \"/revolution\",\n    activeIndex: 2\n  }, {\n    name: \"About Us\",\n    link: \"/about\",\n    activeIndex: 3\n  }, {\n    name: \"Contact Us\",\n    link: \"/contact\",\n    activeIndex: 4\n  }];\n  useEffect(() => {\n    [...menuOptions, ...routes].forEach(route => {\n      switch (window.location.pathname) {\n        case `${route.link}`:\n          if (props.value !== route.activeIndex) {\n            props.setValue(route.activeIndex);\n\n            if (route.selectedIndex && route.selectedIndex !== props.selectedIndex) {\n              props.setSelectedIndex(route.selectedIndex);\n            }\n          }\n\n          break;\n\n        case \"/estimate\":\n          props.setValue(5);\n          break;\n\n        default:\n          break;\n      }\n    });\n  }, [props.value, menuOptions, props.selectedIndex, routes, props]);\n\n  const tabs = __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 5\n    }\n  }, __jsx(Tabs, {\n    value: props.value,\n    onChange: handleChange,\n    className: classes.tabContainer,\n    indicatorColor: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }\n  }, routes.map((route, index) => __jsx(Tab, {\n    key: `${route}${index}`,\n    className: classes.tab,\n    component: Link,\n    to: route.link,\n    label: route.name,\n    \"aria-owns\": route.ariaOwns,\n    \"aria-haspopup\": route.ariaPopup,\n    onMouseOver: route.mouseOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 11\n    }\n  }))), __jsx(Button, {\n    component: Link,\n    to: \"/estimate\",\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    onClick: () => props.setValue(5),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }\n  }, \"Free Estimate\"), __jsx(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    open: openMenu,\n    onClose: handleClose,\n    classes: {\n      paper: classes.menu\n    },\n    MenuListProps: {\n      onMouseLeave: handleClose\n    },\n    elevation: 0,\n    style: {\n      zIndex: 1302\n    },\n    keepMounted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 7\n    }\n  }, menuOptions.map((option, i) => __jsx(MenuItem, {\n    key: `${option}${i}`,\n    component: Link,\n    to: option.link,\n    classes: {\n      root: classes.menuItem\n    },\n    onClick: event => {\n      handleMenuItemClick(event, i);\n      props.setValue(1);\n      handleClose();\n    },\n    selected: i === props.selectedIndex && props.value === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 11\n    }\n  }, option.name))));\n\n  const drawer = __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 5\n    }\n  }, __jsx(SwipeableDrawer, {\n    disableBackdropTransition: !iOS,\n    disableDiscovery: iOS,\n    open: openDrawer,\n    onClose: () => setOpenDrawer(false),\n    onOpen: () => setOpenDrawer(true),\n    classes: {\n      paper: classes.drawer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.toolbarMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 9\n    }\n  }), __jsx(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 9\n    }\n  }, routes.map(route => __jsx(ListItem, {\n    divider: true,\n    key: `${route}${route.activeIndex}`,\n    button: true,\n    component: Link,\n    to: route.link,\n    selected: props.value === route.activeIndex,\n    classes: {\n      selected: classes.drawerItemSelected\n    },\n    onClick: () => {\n      setOpenDrawer(false);\n      props.setValue(route.activeIndex);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemText, {\n    className: classes.drawerItem,\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 15\n    }\n  }, route.name))), __jsx(ListItem, {\n    onClick: () => {\n      setOpenDrawer(false);\n      props.setValue(5);\n    },\n    divider: true,\n    button: true,\n    component: Link,\n    classes: {\n      root: classes.drawerItemEstimate,\n      selected: classes.drawerItemSelected\n    },\n    to: \"/estimate\",\n    selected: props.value === 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 11\n    }\n  }, __jsx(ListItemText, {\n    className: classes.drawerItem,\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 13\n    }\n  }, \"Free Estimate\")))), __jsx(IconButton, {\n    className: classes.drawerIconContainer,\n    onClick: () => setOpenDrawer(!openDrawer),\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 7\n    }\n  }, __jsx(MenuIcon, {\n    className: classes.drawerIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 9\n    }\n  })));\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 5\n    }\n  }, __jsx(ElevationScroll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 7\n    }\n  }, __jsx(AppBar, {\n    position: \"fixed\",\n    className: classes.appbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbar, {\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    component: Link,\n    to: \"/\",\n    disableRipple: true,\n    onClick: () => props.setValue(0),\n    className: classes.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    alt: \"company logo\",\n    className: classes.logo,\n    src: \"../../assets/seherlogo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 15\n    }\n  })), matches ? drawer : tabs))), __jsx(\"div\", {\n    className: classes.toolbarMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sehermahmud/npm-global/udemy/d-Material-UI-React/seherDevelopment-nextjs/src/ui/Header.js"],"names":["React","useState","useEffect","AppBar","Toolbar","useScrollTrigger","makeStyles","Tabs","Tab","Button","Link","Menu","MenuItem","useMediaQuery","useTheme","SwipeableDrawer","IconButton","MenuIcon","List","ListItem","ListItemText","ElevationScroll","props","children","trigger","disableHysteresis","threshold","cloneElement","elevation","useStyles","theme","toolbarMargin","mixins","toolbar","marginBottom","breakpoints","down","logo","height","logoContainer","padding","backgroundColor","tabContainer","marginLeft","tab","typography","minWidth","button","estimate","borderRadius","marginRight","palette","secondary","light","menu","common","blue","color","menuItem","opacity","drawerIcon","width","drawerIconContainer","drawer","drawerItem","drawerItemEstimate","orange","drawerItemSelected","appbar","zIndex","modal","Header","classes","iOS","test","navigator","userAgent","matches","openDrawer","setOpenDrawer","anchorEl","setAnchorEl","openMenu","setOpenMenu","handleChange","e","newValue","setValue","handleClick","currentTarget","handleMenuItemClick","i","setSelectedIndex","handleClose","menuOptions","name","link","activeIndex","selectedIndex","routes","ariaOwns","undefined","ariaPopup","mouseOver","event","forEach","route","window","location","pathname","value","tabs","map","index","paper","onMouseLeave","option","root","selected"],"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Lottie from \"react-lottie\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\n// import useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n// import { makeStyles } from \"@material-ui/styles\";\n// import Tabs from \"@material-ui/core/Tabs\";\n// import Tab from \"@material-ui/core/Tab\";\n// import Button from \"@material-ui/core/Button\";\n// import Link from \"../Link\";\n// import Menu from \"@material-ui/core/Menu\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import useMediaQuery from \"@material-ui/core/useMediaQuery\";\n// import { useTheme } from \"@material-ui/core/styles\";\n// import SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import List from \"@material-ui/core/List\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import Hidden from \"@material-ui/core/Hidden\";\n\n// import heartanimation from \"../animations/heartanimation/heart.json\";\n\n// function ElevationScroll(props) {\n//   const { children } = props;\n\n//   const trigger = useScrollTrigger({\n//     disableHysteresis: true,\n//     threshold: 0,\n//   });\n\n//   return React.cloneElement(children, {\n//     elevation: trigger ? 4 : 0,\n//   });\n// }\n\n// const useStyles = makeStyles((theme) => ({\n//   toolbarMargin: {\n//     ...theme.mixins.toolbar,\n//     marginBottom: \"3em\",\n//     [theme.breakpoints.down(\"md\")]: {\n//       marginBottom: \"2em\",\n//     },\n//     [theme.breakpoints.down(\"xs\")]: {\n//       marginBottom: \"1.25em\",\n//     },\n//   },\n//   logo: {\n//     height: \"8em\",\n//     width: \"8rem\",\n//     [theme.breakpoints.down(\"md\")]: {\n//       height: \"7em\",\n//       width: \"7rem\",\n//     },\n//     [theme.breakpoints.down(\"xs\")]: {\n//       height: \"5.5em\",\n//       width: \"5.5rem\",\n//     },\n//   },\n//   logoContainer: {\n//     padding: 0,\n//     \"&:hover\": {\n//       backgroundColor: \"transparent\",\n//     },\n//   },\n//   tabContainer: {\n//     marginLeft: \"auto\",\n//   },\n//   tab: {\n//     ...theme.typography.tab,\n//     minWidth: 10,\n//     marginLeft: \"25px\",\n//   },\n//   button: {\n//     ...theme.typography.estimate,\n//     borderRadius: \"50px\",\n//     marginLeft: \"50px\",\n//     marginRight: \"25px\",\n//     height: \"45px\",\n//     \"&:hover\": {\n//       backgroundColor: theme.palette.primary.light,\n//     },\n//   },\n//   menu: {\n//     backgroundColor: theme.palette.common.redPink,\n//     color: \"white\",\n//     borderRadius: \"0px\",\n//   },\n//   menuItem: {\n//     ...theme.typography.tab,\n//     color: \"white\",\n//     opacity: 0.7,\n//     \"&:hover\": {\n//       opacity: 1,\n//     },\n//   },\n//   drawerIcon: {\n//     height: \"50px\",\n//     width: \"50px\",\n//   },\n//   drawerIconContainer: {\n//     marginLeft: \"auto\",\n//     \"&:hover\": {\n//       backgroundColor: \"transparent\",\n//     },\n//   },\n//   drawer: {\n//     backgroundColor: theme.palette.common.redPink,\n//   },\n//   drawerItem: {\n//     ...theme.typography.tab,\n//     color: \"white\",\n//     opacity: 0.7,\n//   },\n//   drawerItemEstimate: {\n//     backgroundColor: theme.palette.common.blue,\n//   },\n//   drawerItemSelected: {\n//     \"& .MuiListItemText-root\": {\n//       opacity: 1,\n//     },\n//   },\n//   appbar: {\n//     zIndex: theme.zIndex.modal + 1,\n//   },\n// }));\n\n// export default function Header(props) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n//   const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n//   const [openDrawer, setOpenDrawer] = useState(false);\n//   const [anchorEl, setAnchorEl] = useState(null);\n//   const [openMenu, setOpenMenu] = useState(false);\n\n//   const defaultOptions = {\n//     loop: true,\n//     autoplay: true,\n//     animationData: heartanimation,\n//     rendererSettings: {\n//       preserveAspectRatio: \"xMidYMid slice\",\n//     },\n//   };\n\n//   const handleChange = (e, newValue) => {\n//     props.setValue(newValue);\n//   };\n\n//   const handleClick = (e) => {\n//     setAnchorEl(e.currentTarget);\n//     setOpenMenu(true);\n//   };\n\n//   const handleMenuItemClick = (e, i) => {\n//     setAnchorEl(null);\n//     setOpenMenu(false);\n//     props.setSelectedIndex(i);\n//   };\n\n//   const handleClose = (e) => {\n//     setAnchorEl(null);\n//     setOpenMenu(false);\n//   };\n\n//   const menuOptions = [\n//     { name: \"Services\", link: \"/services\", activeIndex: 1, selectedIndex: 0 },\n//     {\n//       name: \"Custom Software Development\",\n//       link: \"/customsoftware\",\n//       activeIndex: 1,\n//       selectedIndex: 1,\n//     },\n//     {\n//       name: \"iOS/Android App Development\",\n//       link: \"/mobileapps\",\n//       activeIndex: 1,\n//       selectedIndex: 2,\n//     },\n//     {\n//       name: \"Website Development\",\n//       link: \"/websites\",\n//       activeIndex: 1,\n//       selectedIndex: 3,\n//     },\n//   ];\n\n//   const routes = [\n//     { name: \"Home\", link: \"/\", activeIndex: 0 },\n//     {\n//       name: \"Services\",\n//       link: \"/services\",\n//       activeIndex: 1,\n//       ariaOwns: anchorEl ? \"simple-menu\" : undefined,\n//       ariaPopup: anchorEl ? \"true\" : undefined,\n//       mouseOver: (event) => handleClick(event),\n//     },\n//     { name: \"The Revolution\", link: \"/revolution\", activeIndex: 2 },\n//     { name: \"About Us\", link: \"/about\", activeIndex: 3 },\n//     { name: \"Contact Us\", link: \"/contact\", activeIndex: 4 },\n//   ];\n\n//   useEffect(() => {\n//     [...menuOptions, ...routes].forEach((route) => {\n//       switch (window.location.pathname) {\n//         case `${route.link}`:\n//           if (props.value !== route.activeIndex) {\n//             props.setValue(route.activeIndex);\n//             if (\n//               route.selectedIndex &&\n//               route.selectedIndex !== props.selectedIndex\n//             ) {\n//               props.setSelectedIndex(route.selectedIndex);\n//             }\n//           }\n//           break;\n//         case \"/estimate\":\n//           if (props.value !== 5) {\n//             props.setValue(5);\n//           }\n//           break;\n//         default:\n//           break;\n//       }\n//     });\n//   }, [props.value, menuOptions, props.selectedIndex, routes, props]);\n\n//   const tabs = (\n//     <React.Fragment>\n//       <Tabs\n//         value={props.value}\n//         onChange={handleChange}\n//         className={classes.tabContainer}\n//         indicatorColor=\"primary\"\n//       >\n//         {routes.map((route, index) => (\n//           <Tab\n//             key={`${route}${index}`}\n//             className={classes.tab}\n//             component={Link}\n//             href={route.link}\n//             label={route.name}\n//             aria-owns={route.ariaOwns}\n//             aria-haspopup={route.ariaPopup}\n//             onMouseOver={route.mouseOver}\n//             style={{ color: \"white\" }}\n//           />\n//         ))}\n//       </Tabs>\n//       <Button\n//         component={Link}\n//         href=\"/estimate\"\n//         variant=\"contained\"\n//         color=\"primary\"\n//         className={classes.button}\n//         onClick={() => props.setValue(5)}\n//       >\n//         Free Estimate\n//       </Button>\n//       <Menu\n//         id=\"simple-menu\"\n//         anchorEl={anchorEl}\n//         open={openMenu}\n//         onClose={handleClose}\n//         classes={{ paper: classes.menu }}\n//         MenuListProps={{\n//           onMouseLeave: handleClose,\n//         }}\n//         elevation={0}\n//         style={{ zIndex: 1302 }}\n//         keepMounted\n//       >\n//         {menuOptions.map((option, i) => (\n//           <MenuItem\n//             key={`${option}${i}`}\n//             component={Link}\n//             href={option.link}\n//             classes={{ root: classes.menuItem }}\n//             onClick={(event) => {\n//               handleMenuItemClick(event, i);\n//               props.setValue(1);\n//               handleClose();\n//             }}\n//             selected={i === props.selectedIndex && props.value === 1}\n//           >\n//             {option.name}\n//           </MenuItem>\n//         ))}\n//       </Menu>\n//     </React.Fragment>\n//   );\n\n//   const drawer = (\n//     <React.Fragment>\n//       <SwipeableDrawer\n//         disableBackdropTransition={!iOS}\n//         disableDiscovery={iOS}\n//         open={openDrawer}\n//         onClose={() => setOpenDrawer(false)}\n//         onOpen={() => setOpenDrawer(true)}\n//         classes={{ paper: classes.drawer }}\n//       >\n//         <div className={classes.toolbarMargin} />\n//         <List disablePadding>\n//           {routes.map((route) => (\n//             <ListItem\n//               divider\n//               key={`${route}${route.activeIndex}`}\n//               button\n//               component={Link}\n//               href={route.link}\n//               selected={props.value === route.activeIndex}\n//               classes={{ selected: classes.drawerItemSelected }}\n//               onClick={() => {\n//                 setOpenDrawer(false);\n//                 props.setValue(route.activeIndex);\n//               }}\n//             >\n//               <ListItemText className={classes.drawerItem} disableTypography>\n//                 {route.name}\n//               </ListItemText>\n//             </ListItem>\n//           ))}\n//           <ListItem\n//             onClick={() => {\n//               setOpenDrawer(false);\n//               props.setValue(5);\n//             }}\n//             divider\n//             button\n//             component={Link}\n//             classes={{\n//               root: classes.drawerItemEstimate,\n//               selected: classes.drawerItemSelected,\n//             }}\n//             href=\"/estimate\"\n//             selected={props.value === 5}\n//           >\n//             <ListItemText className={classes.drawerItem} disableTypography>\n//               Free Estimate\n//             </ListItemText>\n//           </ListItem>\n//         </List>\n//       </SwipeableDrawer>\n//       <IconButton\n//         className={classes.drawerIconContainer}\n//         onClick={() => setOpenDrawer(!openDrawer)}\n//         disableRipple\n//       >\n//         <MenuIcon className={classes.drawerIcon} />\n//       </IconButton>\n//     </React.Fragment>\n//   );\n\n//   return (\n//     <React.Fragment>\n//       <ElevationScroll>\n//         <AppBar position=\"fixed\" color=\"secondary\" className={classes.appbar}>\n//           <Toolbar disableGutters>\n//             <Lottie\n//               options={defaultOptions}\n//               height=\"5em\"\n//               width=\"6em\"\n//               style={{ margin: 0 }}\n//             />\n//             <Button\n//               component={Link}\n//               href=\"/\"\n//               disableRipple\n//               onClick={() => props.setValue(0)}\n//               className={classes.logoContainer}\n//             >\n//               <img\n//                 alt=\"Company logo\"\n//                 className={classes.logo}\n//                 src=\"/assets/seherlogo.png\"\n//               />\n//             </Button>\n//             <Hidden mdDown>{tabs}</Hidden>\n//             <Hidden lgUp>{drawer}</Hidden>\n//           </Toolbar>\n//         </AppBar>\n//       </ElevationScroll>\n//       <div className={classes.toolbarMargin} />\n//     </React.Fragment>\n//   );\n// }\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\n// import logo from \"../../assets/seherlogo.png\";\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: \"2em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"1.25em\"\n    }\n  },\n  logo: {\n    height: \"8em\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"7em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"5.5em\"\n    }\n  },\n  logoContainer: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  tabContainer: {\n    marginLeft: \"auto\"\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: \"25px\"\n  },\n  button: {\n    ...theme.typography.estimate,\n    borderRadius: \"50px\",\n    marginLeft: \"50px\",\n    marginRight: \"25px\",\n    height: \"45px\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light\n    }\n  },\n  menu: {\n    backgroundColor: theme.palette.common.blue,\n    color: \"white\",\n    borderRadius: \"0px\"\n  },\n  menuItem: {\n    ...theme.typography.tab,\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1\n    }\n  },\n  drawerIcon: {\n    height: \"50px\",\n    width: \"50px\"\n  },\n  drawerIconContainer: {\n    marginLeft: \"auto\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  drawer: {\n    backgroundColor: theme.palette.common.blue\n  },\n  drawerItem: {\n    ...theme.typography.tab,\n    color: \"white\",\n    opacity: 0.7\n  },\n  drawerItemEstimate: {\n    backgroundColor: theme.palette.common.orange\n  },\n  drawerItemSelected: {\n    \"& .MuiListItemText-root\": {\n      opacity: 1\n    }\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1\n  }\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleChange = (e, newValue) => {\n    props.setValue(newValue);\n  };\n\n  const handleClick = e => {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  };\n\n  const handleMenuItemClick = (e, i) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n    props.setSelectedIndex(i);\n  };\n\n  const handleClose = e => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const menuOptions = [\n    { name: \"Services\", link: \"/services\", activeIndex: 1, selectedIndex: 0 },\n    {\n      name: \"Custom Software Development\",\n      link: \"/customsoftware\",\n      activeIndex: 1,\n      selectedIndex: 1\n    },\n    {\n      name: \"iOS/Android App Development\",\n      link: \"/mobileapps\",\n      activeIndex: 1,\n      selectedIndex: 2\n    },\n    {\n      name: \"Website Development\",\n      link: \"/websites\",\n      activeIndex: 1,\n      selectedIndex: 3\n    }\n  ];\n\n  const routes = [\n    { name: \"Home\", link: \"/\", activeIndex: 0 },\n    {\n      name: \"Services\",\n      link: \"/services\",\n      activeIndex: 1,\n      ariaOwns: anchorEl ? \"simple-menu\" : undefined,\n      ariaPopup: anchorEl ? \"true\" : undefined,\n      mouseOver: event => handleClick(event)\n    },\n    { name: \"The Revolution\", link: \"/revolution\", activeIndex: 2 },\n    { name: \"About Us\", link: \"/about\", activeIndex: 3 },\n    { name: \"Contact Us\", link: \"/contact\", activeIndex: 4 }\n  ];\n\n  useEffect(() => {\n    [...menuOptions, ...routes].forEach(route => {\n      switch (window.location.pathname) {\n        case `${route.link}`:\n          if (props.value !== route.activeIndex) {\n            props.setValue(route.activeIndex);\n            if (\n              route.selectedIndex &&\n              route.selectedIndex !== props.selectedIndex\n            ) {\n              props.setSelectedIndex(route.selectedIndex);\n            }\n          }\n          break;\n        case \"/estimate\":\n          props.setValue(5);\n          break;\n        default:\n          break;\n      }\n    });\n  }, [props.value, menuOptions, props.selectedIndex, routes, props]);\n\n  const tabs = (\n    <React.Fragment>\n      <Tabs\n        value={props.value}\n        onChange={handleChange}\n        className={classes.tabContainer}\n        indicatorColor=\"primary\"\n      >\n        {routes.map((route, index) => (\n          <Tab\n            key={`${route}${index}`}\n            className={classes.tab}\n            component={Link}\n            to={route.link}\n            label={route.name}\n            aria-owns={route.ariaOwns}\n            aria-haspopup={route.ariaPopup}\n            onMouseOver={route.mouseOver}\n          />\n        ))}\n      </Tabs>\n      <Button\n        component={Link}\n        to=\"/estimate\"\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.button}\n        onClick={() => props.setValue(5)}\n      >\n        Free Estimate\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={handleClose}\n        classes={{ paper: classes.menu }}\n        MenuListProps={{\n          onMouseLeave: handleClose\n        }}\n        elevation={0}\n        style={{ zIndex: 1302 }}\n        keepMounted\n      >\n        {menuOptions.map((option, i) => (\n          <MenuItem\n            key={`${option}${i}`}\n            component={Link}\n            to={option.link}\n            classes={{ root: classes.menuItem }}\n            onClick={event => {\n              handleMenuItemClick(event, i);\n              props.setValue(1);\n              handleClose();\n            }}\n            selected={i === props.selectedIndex && props.value === 1}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </React.Fragment>\n  );\n\n  const drawer = (\n    <React.Fragment>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => setOpenDrawer(true)}\n        classes={{ paper: classes.drawer }}\n      >\n        <div className={classes.toolbarMargin} />\n        <List disablePadding>\n          {routes.map(route => (\n            <ListItem\n              divider\n              key={`${route}${route.activeIndex}`}\n              button\n              component={Link}\n              to={route.link}\n              selected={props.value === route.activeIndex}\n              classes={{ selected: classes.drawerItemSelected }}\n              onClick={() => {\n                setOpenDrawer(false);\n                props.setValue(route.activeIndex);\n              }}\n            >\n              <ListItemText className={classes.drawerItem} disableTypography>\n                {route.name}\n              </ListItemText>\n            </ListItem>\n          ))}\n          <ListItem\n            onClick={() => {\n              setOpenDrawer(false);\n              props.setValue(5);\n            }}\n            divider\n            button\n            component={Link}\n            classes={{\n              root: classes.drawerItemEstimate,\n              selected: classes.drawerItemSelected\n            }}\n            to=\"/estimate\"\n            selected={props.value === 5}\n          >\n            <ListItemText className={classes.drawerItem} disableTypography>\n              Free Estimate\n            </ListItemText>\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.drawerIconContainer}\n        onClick={() => setOpenDrawer(!openDrawer)}\n        disableRipple\n      >\n        <MenuIcon className={classes.drawerIcon} />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  return (\n    <React.Fragment>\n      <ElevationScroll>\n        <AppBar position=\"fixed\" className={classes.appbar}>\n          <Toolbar disableGutters>\n            <Button\n              component={Link}\n              to=\"/\"\n              disableRipple\n              onClick={() => props.setValue(0)}\n              className={classes.logoContainer}\n            >\n              <img alt=\"company logo\" className={classes.logo} src=\"../../assets/seherlogo.png\" />\n            </Button>\n            {matches ? drawer : tabs}\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <div className={classes.toolbarMargin} />\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}